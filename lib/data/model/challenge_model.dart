import 'package:satorio/data/model/to_json_interface.dart';
import 'package:satorio/domain/entities/challenge.dart';
import 'package:satorio/util/extension.dart';

class ChallengeModel extends Challenge implements ToJsonInterface {
  const ChallengeModel(
    String id,
    String showId,
    String episodeId,
    String title,
    String description,
    String prizePool,
    double prizePoolAmount,
    int players,
    String winners,
    String timePerQuestion,
    int timePerQuestionSec,
    String play,
    int userMaxAttempts,
    int attemptsLeft,
    double receivedReward,
    String receivedRewardAsString,
    int maxWinners,
    int questionsPerGame,
    int minCorrectAnswers,
    bool isRealmActivated,
    int registeredPlayers,
  ) : super(
          id,
          showId,
          episodeId,
          title,
          description,
          prizePool,
          prizePoolAmount,
          players,
          winners,
          timePerQuestion,
          timePerQuestionSec,
          play,
          userMaxAttempts,
          attemptsLeft,
          receivedReward,
          receivedRewardAsString,
          maxWinners,
          questionsPerGame,
          minCorrectAnswers,
          isRealmActivated,
          registeredPlayers,
        );

  factory ChallengeModel.fromJson(Map json) => ChallengeModel(
        json.parseValueAsString('id'),
        json.parseValueAsString('show_id'),
        json.parseValueAsString('episode_id'),
        json.parseValueAsString('title'),
        json.parseValueAsString('description'),
        json.parseValueAsString('prize_pool'),
        json.parseValueAsDouble('prize_pool_amount'),
        json.parseValueAsInt('players'),
        json.parseValueAsString('winners'),
        json.parseValueAsString('time_per_question'),
        json.parseValueAsInt('time_per_question_sec'),
        json.parseValueAsString('play'),
        json.parseValueAsInt('user_max_attempts'),
        json.parseValueAsInt('attempts_left'),
        json.parseValueAsDouble('received_reward'),
        json.parseValueAsString('received_reward_str'),
        json.parseValueAsInt('max_winners'),
        json.parseValueAsInt('questions_per_game'),
        json.parseValueAsInt('min_correct_answers'),
        json.parseValueAsBool('is_realm_activated'),
        json.parseValueAsInt('registered_players'),
      );

  @override
  Map toJson() => {
        'id': id,
        'show_id': showId,
        'episode_id': episodeId,
        'title': title,
        'description': description,
        'prize_pool': prizePool,
        'prize_pool_amount': prizePoolAmount,
        'players': players,
        'winners': winners,
        'time_per_question': timePerQuestion,
        'time_per_question_sec': timePerQuestionSec,
        'play': play,
        'user_max_attempts': userMaxAttempts,
        'attempts_left': attemptsLeft,
        'received_reward': receivedReward,
        'received_reward_str': receivedRewardAsString,
        'max_winners': maxWinners,
        'questions_per_game': questionsPerGame,
        'min_correct_answers': minCorrectAnswers,
        'is_realm_activated': isRealmActivated,
        'registered_players': registeredPlayers,
      };
}
